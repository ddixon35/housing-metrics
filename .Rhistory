knitr::opts_chunk$set(echo=FALSE,
warning=FALSE,
message=FALSE)
library(DBI)
library(odbc)
library(magrittr)
library(data.table)
library(httr)
library(jsonlite)
library(dplyr)
library(openxlsx)
library(psrccensus)
library(psrc.travelsurvey)
install.packages("psrc.travelsurvey")
install.packages("psrcplot")
devtools::install_github("psrc/psrc.travelsurvey")
devtools::install_github("psrc/psrcplot")
devtools::install_github("psrc/psrctrends")
library(DBI)
library(odbc)
library(magrittr)
library(data.table)
library(httr)
library(jsonlite)
library(dplyr)
library(openxlsx)
library(psrccensus)
library(psrc.travelsurvey)
library(psrcplot)
library(psrctrends)
library(tidyverse)
library(tidycensus)
library(fastmap)
install_psrc_fonts()
tracts_22 <- get_acs_recs(geography ='tract',
table.names = 'B03002',
years = 2022,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
# refine table
acs_re_22 <- tracts_22 %>%
filter(variable %in% c("B03002_001", "B03002_003", "B03002_004", "B03002_005", "B03002_006", "B03002_007", "B03002_008", "B03002_009",
"B03002_010", "B03002_011", "B03002_012")) %>%
dplyr::mutate(.keep = "none",
geoid20 = GEOID,
count = estimate,
count_moe = moe,
race_ethnicity = label,
census_tract = name,
survey = year)
# create/modify variables
# str detect will go in order
acs_re_new <- acs_re_22 %>%
dplyr:: mutate(race_ethnicity = case_when(str_detect(race_ethnicity, "American Indian") ~"AIAN",
str_detect(race_ethnicity, "Asian") ~"Asian",
str_detect(race_ethnicity, "Black") ~"Black/African American",
str_detect(race_ethnicity, "Native Hawaiian") ~"NHOPI",
str_detect(race_ethnicity, "Some other") ~"Other or Multiple Races",
str_detect(race_ethnicity, "Two or more") ~"Other or Multiple Races",
str_detect(race_ethnicity, "White") ~"White",
str_detect(race_ethnicity, "Hispanic or Latino") ~"Hispanic/Latinx",
str_detect(race_ethnicity, "Total") ~"Total")) %>%
dplyr::group_by(geoid20, census_tract, race_ethnicity) %>%
dplyr::summarise(count = sum(count, na.rm = TRUE),
moe = moe_sum(count_moe, estimate = count, na.rm = TRUE))%>%
dplyr::filter(race_ethnicity != "Total")
# connect to Elmer
elmer_connection <- dbConnect(odbc::odbc(),
driver = "SQL Server",
server = "AWS-PROD-SQL\\Sockeye",
database = "Elmer",
trusted_connection = "yes"
)
