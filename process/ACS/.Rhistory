years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
View(DP04Table_raw)
DP04Table_raw <- real_dollars(DP04Table_raw, inflation_year)
DP04Table_raw <- real_dollars(DP04Table_raw$estimate, inflation_year)
DP04Table_raw$estimate <- real_dollars(DP04Table_raw, inflation_year)
library(fredr)
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
year <- (2010)
inflation_year <- (2021)
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
View(pums_raw)
View(pums_raw[["variables"]])
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
View(pums)
View(pums[["variables"]])
rename(pums, HINCP_adjusted = HINCP2021)
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))),
rename(pums, HINCP_adjusted = HINCP2021))
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
rename(pums, HINCP_adjusted = HINCP2021)
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
rename(pums, variables$HINCP_adjusted = HINCP2021)
incbyre <- psrc_pums_median(pums, select(starts_with('HINCP20')), group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
incbyre <- psrc_pums_median(pums, select(starts_with("HINCP20")), group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
incbyre <- psrc_pums_median(pums, "HINCP2021", group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
View(incbyre)
incbyre <- filter(incbyre, TEN == "Rented")
library(stringr)
incbyre <- incbyre %>% rename_all(str_replace_all(.,"median","Median"))
incbyre <- incbyre %>% rename("HINCP2021_median" = "HINCP_median")
incbyre <- incbyre %>% rename("HINCP_median" = "HINCP2021_median")
incbyre <- incbyre %>% rename("HINCP_median_moe" = "HINCP2021_median_moe")
incbyre$maxmonthlyrent <- incbyre$HINCP_median/12*0.3
incbyre$moeupperbound <- incbyre$HINCP_median + incbyre$HINCP_median_moe
incbyre$moelowerbound <- incbyre$HINCP_median - incbyre$HINCP_median_moe
# Create RE reference table
incbyre <- incbyre[incbyre$PRACE %in% c("Asian", "Black", "Hispanic/Latinx", "White"),]
incbyre_piv <- incbyre[, c(4,8)]
incbyre_piv <- incbyre_piv %>% pivot_wider(names_from = PRACE, values_from = maxmonthlyrent)
View(incbyre_piv)
install.packages(c("blob", "broom", "cachem", "chron", "dbplyr", "DT", "dtplyr", "forcats", "gargle", "gert", "ggiraph", "gh", "googledrive", "googlesheets4", "haven", "httpuv", "janitor", "later", "maptools", "modelr", "odbc", "openxlsx", "pkgbuild", "pkgdown", "profvis", "ragg", "readxl", "rgdal", "rlang", "rmarkdown", "roxygen2", "RSQLite", "shiny", "sourcetools", "tidyverse", "whisker", "XML", "zip"))
TRUE
year <- (2010)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
library(stringr)
year <- (2010)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
View(DP04Table_raw)
# Adjust for inflation
DP04Table_raw <- pce_deflator(year, inflation_year)
year <- (2010)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
# Adjust for inflation
DP04Table_raw$estimate <- pce_deflator(year, inflation_year)
View(DP04Table_raw)
year <- (2010)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
View(grossrent)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
grossrent$grossrent <- grossrent * inflation_adjust
grossrent$grossrent <- grossrent$grossrent * grossrent$inflation_adjust
grossrent$grossrent_moe <- grossrent$grossrent_moe * grossrent$inflation_adjust
grossrent = grossrent[,!grepl("inflation_adjust",names(grossrent))]
# Evaluate RR scores - can we trust these data?
grossrent$rr_score <- (grossrent$grossrent_moe/1.645)/grossrent$grossrent*100
grossrent <- grossrent %>%
mutate(rr_score=factor(case_when(rr_score <= 15 ~"good",
rr_score <= 30 ~"fair",
rr_score <= 50 ~"weak",
rr_score > 50 ~"unreliable",
!is.na(rr_score) ~ NA)))
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP"))
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
library(stringr)
year <- (2010)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
grossrent$grossrent <- grossrent$grossrent * grossrent$inflation_adjust
grossrent$grossrent_moe <- grossrent$grossrent_moe * grossrent$inflation_adjust
grossrent = grossrent[,!grepl("inflation_adjust",names(grossrent))]
# Evaluate RR scores - can we trust these data?
grossrent$rr_score <- (grossrent$grossrent_moe/1.645)/grossrent$grossrent*100
grossrent <- grossrent %>%
mutate(rr_score=factor(case_when(rr_score <= 15 ~"good",
rr_score <= 30 ~"fair",
rr_score <= 50 ~"weak",
rr_score > 50 ~"unreliable",
!is.na(rr_score) ~ NA)))
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
# Create/modify variables
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
incbyre <- psrc_pums_median(pums, "HINCP2021", group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
incbyre <- filter(incbyre, TEN == "Rented")
incbyre <- incbyre %>% rename("HINCP_median" = "HINCP2021_median")
incbyre <- incbyre %>% rename("HINCP_median_moe" = "HINCP2021_median_moe")
# Create new fields, calculate cost max rent, moe upper/lower
incbyre$maxmonthlyrent <- incbyre$HINCP_median/12*0.3
incbyre$moeupperbound <- incbyre$HINCP_median + incbyre$HINCP_median_moe
incbyre$moelowerbound <- incbyre$HINCP_median - incbyre$HINCP_median_moe
# Create RE reference table
incbyre <- incbyre[incbyre$PRACE %in% c("Asian", "Black", "Hispanic/Latinx", "White"),]
incbyre_piv <- incbyre[, c(4,8)]
incbyre_piv <- incbyre_piv %>% pivot_wider(names_from = PRACE, values_from = maxmonthlyrent)
#-------------- Indicate which tracts are affordable to each RE category --------------
grossrent$affordable_asian <- ifelse(incbyre_piv$Asian >= grossrent$grossrent, 1, 0)
grossrent$affordable_black <- ifelse(incbyre_piv$Black >= grossrent$grossrent, 1, 0)
grossrent$affordable_hispanic <- ifelse(incbyre_piv$`Hispanic/Latinx` >= grossrent$grossrent, 1, 0)
grossrent$affordable_white <- ifelse(incbyre_piv$White >= grossrent$grossrent, 1, 0)
#-------------- Summary of census tracts affordable to each RE category -------------
summarytbl <- data.frame(year)
summarytbl$affordable_asian <- sum(na.omit(grossrent$affordable_asian))/nrow(na.omit(grossrent))
summarytbl$affordable_black <- sum(na.omit(grossrent$affordable_black))/nrow(na.omit(grossrent))
summarytbl$affordable_hispanic <- sum(na.omit(grossrent$affordable_hispanic))/nrow(na.omit(grossrent))
summarytbl$affordable_white <- sum(na.omit(grossrent$affordable_white))/nrow(na.omit(grossrent))
View(grossrent)
years <- c(2010, 2016, 2021)
inflation_year <- (2021)
#------------ Collect Median Gross Rent by Tract ------------
pull_rent_data <- function(years){
# returns a list of get_acs_recs data, for all years
lapply(years, function(x) get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5'))
}
DPO4Table_raw <- pull_rent_data(years)
View(DPO4Table_raw)
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
grossrent <- DPO4Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
rm(DPO4Table_raw)
DP04_raw <- map(DP04_raw, ~pull_rent_data(years)) %>%
reduce(bind_rows)
DP04_raw <- map(years, ~pull_rent_data(.x)) %>%
reduce(bind_rows)
View(DP04_raw)
grossrent <- DP04_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
View(grossrent)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
ibrary(psrccensus)
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
library(stringr)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(years, inflation_year)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
pull_pums_data <- function(years){
# returns a dataframe of get_psrc_pums data, for all years
lapply(years, function(x) get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP")))
}
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- map(years, ~pull_pums_data(.x)) %>%
reduce(bind_rows)
pull_pums_data <- function(years){
# returns a dataframe of get_psrc_pums data, for all years
lapply(years, function(x) get_psrc_pums(5,x,"h",c("PRACE","TEN","HINCP")))
}
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- map(years, ~pull_pums_data(.x)) %>%
reduce(bind_rows)
rlang::last_trace()
# returns a dataframe of get_psrc_pums data, for all years
lapply(years, function(x) get_psrc_pums(5, x,"h",c("PRACE","TEN","HINCP")))
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
library(stringr)
year <- (2021)
inflation_year <- (2021)
file_path <- "J:/Projects/V2050/Housing/Monitoring/2023Update/Access to Affordable Rental Housing/r_output 2010 5YR Adjusted.csv"
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
grossrent$grossrent <- grossrent$grossrent * grossrent$inflation_adjust
grossrent$grossrent_moe <- grossrent$grossrent_moe * grossrent$inflation_adjust
grossrent = grossrent[,!grepl("inflation_adjust",names(grossrent))]
# Evaluate RR scores - can we trust these data?
grossrent$rr_score <- (grossrent$grossrent_moe/1.645)/grossrent$grossrent*100
grossrent <- grossrent %>%
mutate(rr_score=factor(case_when(rr_score <= 15 ~"good",
rr_score <= 30 ~"fair",
rr_score <= 50 ~"weak",
rr_score > 50 ~"unreliable",
!is.na(rr_score) ~ NA)))
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
# Create/modify variables
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
incbyre <- psrc_pums_median(pums, "HINCP2021", group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
incbyre <- filter(incbyre, TEN == "Rented")
incbyre <- incbyre %>% rename("HINCP_median" = "HINCP2021_median")
incbyre <- incbyre %>% rename("HINCP_median_moe" = "HINCP2021_median_moe")
# Create new fields, calculate cost max rent, moe upper/lower
incbyre$maxmonthlyrent <- incbyre$HINCP_median/12*0.3
incbyre$moeupperbound <- incbyre$HINCP_median + incbyre$HINCP_median_moe
incbyre$moelowerbound <- incbyre$HINCP_median - incbyre$HINCP_median_moe
# Create RE reference table
incbyre <- incbyre[incbyre$PRACE %in% c("Asian", "Black", "Hispanic/Latinx", "White"),]
incbyre_piv <- incbyre[, c(4,8)]
incbyre_piv <- incbyre_piv %>% pivot_wider(names_from = PRACE, values_from = maxmonthlyrent)
#-------------- Indicate which tracts are affordable to each RE category --------------
grossrent$affordable_asian <- ifelse(incbyre_piv$Asian >= grossrent$grossrent, 1, 0)
grossrent$affordable_black <- ifelse(incbyre_piv$Black >= grossrent$grossrent, 1, 0)
grossrent$affordable_hispanic <- ifelse(incbyre_piv$`Hispanic/Latinx` >= grossrent$grossrent, 1, 0)
grossrent$affordable_white <- ifelse(incbyre_piv$White >= grossrent$grossrent, 1, 0)
#-------------- Summary of census tracts affordable to each RE category -------------
summarytbl <- data.frame(year)
summarytbl$affordable_asian <- sum(na.omit(grossrent$affordable_asian))/nrow(na.omit(grossrent))
summarytbl$affordable_black <- sum(na.omit(grossrent$affordable_black))/nrow(na.omit(grossrent))
summarytbl$affordable_hispanic <- sum(na.omit(grossrent$affordable_hispanic))/nrow(na.omit(grossrent))
summarytbl$affordable_white <- sum(na.omit(grossrent$affordable_white))/nrow(na.omit(grossrent))
View(grossrent)
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
library(stringr)
year <- (2010)
inflation_year <- (2021)
file_path <- "J:/Projects/V2050/Housing/Monitoring/2023Update/Access to Affordable Rental Housing/r_output 2010 5YR Adjusted.csv"
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
grossrent$grossrent <- grossrent$grossrent * grossrent$inflation_adjust
grossrent$grossrent_moe <- grossrent$grossrent_moe * grossrent$inflation_adjust
grossrent = grossrent[,!grepl("inflation_adjust",names(grossrent))]
# Evaluate RR scores - can we trust these data?
grossrent$rr_score <- (grossrent$grossrent_moe/1.645)/grossrent$grossrent*100
grossrent <- grossrent %>%
mutate(rr_score=factor(case_when(rr_score <= 15 ~"good",
rr_score <= 30 ~"fair",
rr_score <= 50 ~"weak",
rr_score > 50 ~"unreliable",
!is.na(rr_score) ~ NA)))
#------------ Median Renter HH Income by Race/Ethnicity ------------
pums_raw <- get_psrc_pums(5,year,"h",c("PRACE","TEN","HINCP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
# Create/modify variables
pums <- pums_raw %>% mutate(PRACE=factor(
case_when(grepl("Other Race|Two or More Races", PRACE) ~"Other or Multiple Races",
grepl("^Black ", PRACE) ~"Black",
grepl("^Hispanic ", PRACE) ~"Hispanic/Latinx",
!is.na(PRACE) ~stringr::str_replace_all(as.character(PRACE), " (and|or) ", "/") %>%
stringr::str_replace(" alone", "") %>%
stringr::str_replace(" Alone", ""))))
incbyre <- psrc_pums_median(pums, "HINCP2021", group_vars = c("DATA_YEAR","TEN", "PRACE"),rr=TRUE)
incbyre <- filter(incbyre, TEN == "Rented")
incbyre <- incbyre %>% rename("HINCP_median" = "HINCP2021_median")
incbyre <- incbyre %>% rename("HINCP_median_moe" = "HINCP2021_median_moe")
# Create new fields, calculate cost max rent, moe upper/lower
incbyre$maxmonthlyrent <- incbyre$HINCP_median/12*0.3
incbyre$moeupperbound <- incbyre$HINCP_median + incbyre$HINCP_median_moe
incbyre$moelowerbound <- incbyre$HINCP_median - incbyre$HINCP_median_moe
# Create RE reference table
incbyre <- incbyre[incbyre$PRACE %in% c("Asian", "Black", "Hispanic/Latinx", "White"),]
incbyre_piv <- incbyre[, c(4,8)]
incbyre_piv <- incbyre_piv %>% pivot_wider(names_from = PRACE, values_from = maxmonthlyrent)
#-------------- Indicate which tracts are affordable to each RE category --------------
grossrent$affordable_asian <- ifelse(incbyre_piv$Asian >= grossrent$grossrent, 1, 0)
grossrent$affordable_black <- ifelse(incbyre_piv$Black >= grossrent$grossrent, 1, 0)
grossrent$affordable_hispanic <- ifelse(incbyre_piv$`Hispanic/Latinx` >= grossrent$grossrent, 1, 0)
grossrent$affordable_white <- ifelse(incbyre_piv$White >= grossrent$grossrent, 1, 0)
#-------------- Summary of census tracts affordable to each RE category -------------
summarytbl <- data.frame(year)
summarytbl$affordable_asian <- sum(na.omit(grossrent$affordable_asian))/nrow(na.omit(grossrent))
summarytbl$affordable_black <- sum(na.omit(grossrent$affordable_black))/nrow(na.omit(grossrent))
summarytbl$affordable_hispanic <- sum(na.omit(grossrent$affordable_hispanic))/nrow(na.omit(grossrent))
summarytbl$affordable_white <- sum(na.omit(grossrent$affordable_white))/nrow(na.omit(grossrent))
ibrary(psrccensus)
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
year <- (2016)
inflation_year <- (2021)
file_path <- "J:/Projects/V2050/Housing/Monitoring/2023Update/Access to Affordable Rental Housing/r_output.csv"
#------------ Collect Median Gross Rent by Tract ------------
DP04Table_raw <- get_acs_recs(geography = 'tract',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5')
grossrent <- DP04Table_raw %>%
filter(ifelse(year >= '2015', variable == "DP04_0134", variable == "DP04_0132")) %>% #variable change beginning in 2015
mutate(.keep = "none",
DATA_YEAR = year,
geoid = GEOID,
variable = variable,
grossrent = estimate,
grossrent_moe = moe)
# Adjust for inflation
grossrent$inflation_adjust <- pce_deflator(year, inflation_year)
grossrent$grossrent <- grossrent$grossrent * grossrent$inflation_adjust
grossrent$grossrent_moe <- grossrent$grossrent_moe * grossrent$inflation_adjust
grossrent = grossrent[,!grepl("inflation_adjust",names(grossrent))]
# Evaluate RR scores - can we trust these data?
grossrent$rr_score <- (grossrent$grossrent_moe/1.645)/grossrent$grossrent*100
grossrent <- grossrent %>%
mutate(rr_score=factor(case_when(rr_score <= 15 ~"good",
rr_score <= 30 ~"fair",
rr_score <= 50 ~"weak",
rr_score > 50 ~"unreliable",
!is.na(rr_score) ~ NA)))
View(grossrent)
pums_raw <- get_psrc_pums(5,year,"h",c("TEN","HINCP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
# Create/modify variables
pums <- pums_raw
incbyre <- psrc_pums_median(pums, "HINCP2021", group_vars = c("DATA_YEAR","TEN"),rr=TRUE)
incbyre <- filter(incbyre, TEN == "Rented")
incbyre <- incbyre %>% rename("HINCP_median" = "HINCP2021_median")
incbyre <- incbyre %>% rename("HINCP_median_moe" = "HINCP2021_median_moe")
# Create new fields, calculate cost max rent, moe upper/lower
incbyre$maxmonthlyrent <- incbyre$HINCP_median/12*0.3
incbyre$moeupperbound <- incbyre$HINCP_median + incbyre$HINCP_median_moe
incbyre$moelowerbound <- incbyre$HINCP_median - incbyre$HINCP_median_moe
# Create reference table
incbyre_piv <- incbyre
incbyre_piv <- incbyre_piv %>% pivot_wider(names_from = COUNTY, values_from = maxmonthlyrent)
View(incbyre)
library(psrccensus)
library(tidyverse)
library(dplyr)
library(srvyr)
library(fredr)
year <- (2016)
inflation_year <- (2021)
file_path <- "J:/Projects/V2050/Housing/Monitoring/2023Update/Access to Affordable Rental Housing/r_output.csv"
pums_raw <- get_psrc_pums(5,year,"h",c("TEN","HINCP","GRNTP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
#-------------- Region-wide Gross Median Rent --------------
pums_rent <- pums_raw
View(pums_rent)
View(pums_rent[["variables"]])
medianrent_region <- psrc_pums_median(pums_rent, "GRNTP2021", group_vars = c("DATA_YEAR"),rr=TRUE)
View(medianrent_region)
year <- (2010)
inflation_year <- (2021)
pums_raw <- get_psrc_pums(5,year,"h",c("TEN","HINCP","GRNTP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
#-------------- Region-wide Gross Median Rent --------------
pums_rent <- pums_raw
medianrent_region <- psrc_pums_median(pums_rent, "GRNTP2021", group_vars = c("DATA_YEAR"),rr=TRUE)
year <- (2021)
pums_raw <- get_psrc_pums(5,year,"h",c("TEN","HINCP","GRNTP"))
pums_raw <- real_dollars(pums_raw, inflation_year)
pums_rent <- pums_raw
medianrent_region <- psrc_pums_median(pums_rent, "GRNTP2021", group_vars = c("DATA_YEAR"),rr=TRUE)
View(medianrent_region)
