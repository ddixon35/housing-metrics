library(tidycensus)
library(purrr)
library(readxl)
library(psrchousing)
years <- c(2015,2016,2017,2018,2019,2021,2022)
counties <- c("King", "Pierce", "Snohomish")
# ---------------- Functions ------------------
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_psrc_pums(1, x, "h",c("HINCP")))
}
inc_clean_func <- function(hh_inc){
hh_inc_calc <- psrc_pums_median(hh_inc, "HINCP", group_vars = "MSA", rr=TRUE)
}
# Function to get columns that start with a number
get_numeric_cols <- function(df) {
colnames(df)[str_detect(colnames(df), "^[0-9]")]  # Regular expression to match column names starting with a digit
}
# ---------------- ACS HH Income data -----------------
# I know this is messy code - I couldn't figure out how to have the MSA column be created within the function. Could be cleaned up!
# pull the data
hh_inc <- pull_data(years)
# Apply the mutate operation to add the MSA column to each element in hh_inc
hh_inc <- map(hh_inc, function(data) {
data[["variables"]] <- data[["variables"]] %>%
mutate(MSA = case_when(
COUNTY == "Kitsap" ~ NA_character_,
!is.na(COUNTY) ~ "Seattle Tacoma Bellevue MSA"
))
return(data)
})
# Summarize by income
hh_inc_all <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA")
View(hh_inc_all)
library(openxlsx)
library(tidyr)
library(stringr)
library(dplyr)
library(magrittr)
library(psrccensus)
library(tidycensus)
library(purrr)
library(readxl)
library(psrchousing)
# assumptions
#  ZHVI: Zillow Home Value Index - All Homes (SFR & Condo) Time series, Smoothed, Seasonally-Adjusted
#  ZORI: Zillow Observed Rent Index - All Homes + Multifamily, Smoothed, Seasonally-Adjusted
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric12-13_metro_area_rent_home_value"
ZHVI_url <- "https://files.zillowstatic.com/research/public_csvs/zhvi/Metro_zhvi_uc_sfrcondo_tier_0.33_0.67_sm_sa_month.csv"
ZORI_url <- "https://files.zillowstatic.com/research/public_csvs/zori/Metro_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1711667054"
ofm_inc_url <- "https://ofm.wa.gov/sites/default/files/public/dataresearch/economy/median_household_income_estimates.xlsx"
ofm_inc_file <- "median_household_income_estimates.xlsx"
years <- c(2015,2016)#,2017,2018,2019,2021,2022)
counties <- c("King", "Pierce", "Snohomish")
# ---------------- Functions ------------------
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_psrc_pums(1, x, "h",c("HINCP","TEN")))
}
inc_clean_func <- function(hh_inc){
hh_inc_calc <- psrc_pums_median(hh_inc, "HINCP", group_vars = "MSA", rr=TRUE)
}
# Function to get columns that start with a number
get_numeric_cols <- function(df) {
colnames(df)[str_detect(colnames(df), "^[0-9]")]  # Regular expression to match column names starting with a digit
}
# ---------------- ACS HH Income data -----------------
# pull the data
hh_inc <- pull_data(years)
View(hh_inc)
View(hh_inc)
View(hh_inc[[1]][["variables"]])
# Apply the mutate operation to add the MSA column to each element in hh_inc
hh_inc <- map(hh_inc, function(data) {
data[["variables"]] <- data[["variables"]] %>%
mutate(MSA = case_when(COUNTY == "Kitsap" ~ NA_character_, !is.na(COUNTY) ~ "Seattle Tacoma Bellevue MSA"),
tenure = case_when(TEN == "Rented" ~ "renter", !is.na(TEN) ~ "owner"))
return(data)
})
View(hh_inc[[1]][["variables"]])
# Summarize by income (owners and renters)
hh_inc_all <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA")
hh_inc_renter <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA",
tenure = "renter")
hh_inc_renter <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA",
tenure = "renter")
hh_inc_renter <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA",
tenure == "renter")
hh_inc_renter <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA" | tenure == "renter")
View(hh_inc)
# Summarize by income (owners and renters)
hh_inc_all <- map(hh_inc, ~inc_clean_func(.x)) %>%
reduce(bind_rows) #%>%
View(hh_inc_all)
hh_inc[[1]]
rm(inc_clean_func)
inc_clean_func_all <- function(hh_inc){
hh_inc_calc <- psrc_pums_median(hh_inc, "HINCP", group_vars = "MSA", rr=TRUE)
}
inc_clean_func_tenure <- function(hh_inc){
hh_inc_calc <- psrc_pums_median(hh_inc, "HINCP", group_vars = c("MSA", "tenure"), rr=TRUE)
}
# Summarize by income (owners and renters)
hh_inc_all <- map(hh_inc, ~inc_clean_func_all(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA")
View(hh_inc_all)
hh_inc_renter <- map(hh_inc, ~inc_clean_func_tenure(.x)) %>%
reduce(bind_rows)# %>%
View(hh_inc_renter)
hh_inc_renter <- map(hh_inc, ~inc_clean_func_tenure(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA" | tenure != "Total")
View(hh_inc_renter)
hh_inc_renter <- map(hh_inc, ~inc_clean_func_tenure(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA", tenure != "Total")
View(hh_inc_renter)
hh_inc_tenure <- map(hh_inc, ~inc_clean_func_tenure(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA")
View(hh_inc_tenure)
# TITLE: Home Value & Rent
# GEOGRAPHIES: Seattle MSA
# DATA SOURCE: Zillow, ACS
# DATE MODIFIED: 8.27.2024
# AUTHOR: Eric Clute
library(openxlsx)
library(tidyr)
library(stringr)
library(dplyr)
library(magrittr)
library(psrccensus)
library(tidycensus)
library(purrr)
library(readxl)
library(psrchousing)
# assumptions
#  ZHVI: Zillow Home Value Index - All Homes (SFR & Condo) Time series, Smoothed, Seasonally-Adjusted
#  ZORI: Zillow Observed Rent Index - All Homes + Multifamily, Smoothed, Seasonally-Adjusted
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric12-13_metro_area_rent_home_value"
ZHVI_url <- "https://files.zillowstatic.com/research/public_csvs/zhvi/Metro_zhvi_uc_sfrcondo_tier_0.33_0.67_sm_sa_month.csv"
ZORI_url <- "https://files.zillowstatic.com/research/public_csvs/zori/Metro_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1711667054"
ofm_inc_url <- "https://ofm.wa.gov/sites/default/files/public/dataresearch/economy/median_household_income_estimates.xlsx"
ofm_inc_file <- "median_household_income_estimates.xlsx"
years <- c(2015,2016,2017,2018,2019,2021,2022)
counties <- c("King", "Pierce", "Snohomish")
# ---------------- Functions ------------------
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_psrc_pums(1, x, "h",c("HINCP","TEN")))
}
inc_clean_func_tenure <- function(hh_inc){
hh_inc_calc <- psrc_pums_median(hh_inc, "HINCP", group_vars = c("MSA", "tenure"), rr=TRUE)
}
# Function to get columns that start with a number
get_numeric_cols <- function(df) {
colnames(df)[str_detect(colnames(df), "^[0-9]")]  # Regular expression to match column names starting with a digit
}
# ---------------- ACS HH Income data -----------------
# pull the data
hh_inc <- pull_data(years)
# Apply the mutate operation to add the MSA column to each element in hh_inc
hh_inc <- map(hh_inc, function(data) {
data[["variables"]] <- data[["variables"]] %>%
mutate(MSA = case_when(COUNTY == "Kitsap" ~ NA_character_, !is.na(COUNTY) ~ "Seattle Tacoma Bellevue MSA"),
tenure = case_when(TEN == "Rented" ~ "renter", !is.na(TEN) ~ "owner"))
return(data)
})
# Summarize by county and tenure
hh_inc_tenure <- map(hh_inc, ~inc_clean_func_tenure(.x)) %>%
reduce(bind_rows) %>%
filter(MSA == "Seattle Tacoma Bellevue MSA")
# ASSUMPTIONS
library(psrccensus)
years <- c(2015)#,2016,2017,2018,2019,2020,2021,2022,2023)
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5'))
}
# pull the data
rent_raw <- pull_data(years)
year <- c(2015)#,2016,2017,2018,2019,2020,2021,2022,2023)
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs5'))
}
# pull the data
rent_raw <- pull_data(year)
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
# pull the data
rent_raw <- pull_data(year)
View(rent_raw)
View(rent_raw[[1]])
View(rent_raw)
View(rent_raw[[1]])
# ASSUMPTIONS
library(psrccensus)
year <- c(2015,2016)#,2017,2018,2019,2020,2021,2022,2023)
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(pull_data){
pull_data <- pull_data %>% filter(variable=="DP04_0134")
}
# pull the data
rent_raw <- pull_data(year)
# Grab gross median rent and combine all years
rent_all <- map(pull_data, ~combine_reduce(.x)) %>%
reduce(bind_rows)
library(magrittr)
# Grab gross median rent and combine all years
rent_all <- map(pull_data, ~combine_reduce(.x)) %>%
reduce(bind_rows)
library(purrr)
# Grab gross median rent and combine all years
rent_all <- map(pull_data, ~combine_reduce(.x)) %>%
reduce(bind_rows)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
pull_data <- pull_data %>% filter(variable == "DP04_0134")
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
combine_reduce <- function(pull_data){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
rent_raw[[1]][["name"]]
str(rent_raw[[1]])  # Check the structure of the first year's data
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
View(rent_raw)
View(rent_raw[[2]])
rent_raw <- rent_raw %>% filter(label == "DP04_0134")
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(label == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
year <- c(2015)#,2016)#,2017,2018,2019,2020,2021,2022,2023)
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# pull the data
rent_raw <- pull_data(year)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
rent_raw <- rent_raw %>% filter(rent_raw[[1]]$variable == "DP04_0134")
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(rent_raw[[1]]$variable == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
year <- c(2015,2016)#,2017,2018,2019,2020,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
library(psrccensus)
library(magrittr)
library(purrr)
year <- c(2015,2016)#,2017,2018,2019,2020,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = year,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(variable == "DP04_0134")
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
rent_raw[[1]] %>% glimpse()  # Display the structure of the tibble for the first year
colnames(rent_raw[[1]])
rent_raw <- rent_raw %>% filter('variable' == "DP04_0134")
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter('variable' == "DP04_0134")
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
library(dplyr)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
View(rent_all)
rent_raw <- rent_raw %>% filter('variable' == 'DP04_0134')
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter('variable' == 'DP04_0134')
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
View(rent_all)
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
View(rent_all)
years <- c(2015,2016,2017,2018,2019,2020,2021,2022,2023)
library(psrccensus)
library(magrittr)
library(purrr)
library(dplyr)
years <- c(2015,2016,2017,2018,2019,2020,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
library(psrccensus)
library(magrittr)
library(purrr)
library(dplyr)
year <- c(2015,2016,2017,2018,2019,2020,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
library(psrccensus)
library(magrittr)
library(purrr)
library(dplyr)
year <- c(2015,2016,2017,2018,2019,2020,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
# ASSUMPTIONS
library(psrccensus)
library(magrittr)
library(purrr)
library(dplyr)
year <- c(2015,2016,2017,2018,2019,2021,2022,2023)
# FUNCTIONS
# ---- Pull PUMS data
pull_data <- function(years){
# returns a list of get_psrc_pums outputs, one for each year
lapply(years, function(x) get_acs_recs(geography = 'county',
table.names = c('DP04'),
years = x,
counties = c("King", "Kitsap", "Pierce", "Snohomish"),
acs.type = 'acs1'))
}
combine_reduce <- function(rent_raw){
rent_raw <- rent_raw %>% filter(`variable` == 'DP04_0134')
}
# PROCESSING
# pull the data
rent_raw <- pull_data(year)
# Grab gross median rent and combine all years
rent_all <- map(rent_raw, ~combine_reduce(.x)) %>%
reduce(bind_rows)
View(rent_all)
View(rent_all)
# CLEAN UP
# Reduce unneeded columns
rent_all <- rent_all %>% select(name, estimate, moe, label, acs_type, year, se, cv, reliability)
View(rent_all)
