combined_data <- combine_data(excel_data)
hct_data <- combined_data
hct_data$type <- "hct"
combined_data <- merge(rgc_data, hct_data, by = intersect(names(rgc_data), names(hct_data)))
View(combined_data)
combined_data <- merge(rgc_data, hct_data)
combined_data <- rbind(rgc_data, hct_data)
View(combined_data)
# Remove unneeded fields
combined_data <- combined_data %>%
select(geo, type, `Inventory Units`, `Asking Rent Per Unit`)
# Combine w/reference table
reference_table <- read_excel(reference_path)
View(hct_data)
View(reference_table)
library(readxl)
library(dplyr)
library(purrr)
library(openxlsx)
rgc_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_rgc"
hct_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_hct"
reference_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/reference_table.xlsx"
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent"
source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/20/2024. Includes all data inside RGC/HCT (excludes Federal Way, Issaquah, Port Orchard Ferry Terminal, and Poulsbo due to missing data). Rent rounded to nearest 10")
# Create Functions ---------------------
# Function to read Excel file, extract column names and first row, and add filename as a column
read_excel_with_filename <- function(file_path) {
# Read Excel file
data <- read_excel(file_path)
# Extract column names and first row of data
col_names <- colnames(data)
first_row <- slice(data, 1)
# Add filename as a column without the .xlsx extension
filename <- gsub("\\.xlsx$", "", basename(file_path))
first_row$name <- filename
# Convert all columns to character type
first_row <- mutate_all(first_row, as.character)
# Return a list containing column names, first row of data, and filename
list(col_names = col_names, first_row = first_row)
}
# Function to combine data from each Excel file into one data frame
combine_data <- function(data_list) {
result <- combined_data
for (i in seq_along(data_list)) {
filename <- gsub("\\.xlsx$", "", basename(xlsx_files[i]))
data_list[[i]]$first_row$name <- filename
# Convert all columns to character type
data_list[[i]]$first_row <- mutate_all(data_list[[i]]$first_row, as.character)
result <- bind_rows(result, data_list[[i]]$first_row)
}
result
}
# Combine RGC files Together  ---------------------
xlsx_files <- list.files(rgc_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
rgc_data <- combined_data
rgc_data$type <- "rgc"
# Combine HCT files Together  ---------------------
xlsx_files <- list.files(hct_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
hct_data <- combined_data
hct_data$type <- "hct"
combined_data <- rbind(rgc_data, hct_data)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, type, `Inventory Units`, `Asking Rent Per Unit`)
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
View(combined_data)
# Summarize by Center (name)
by_center <- combined_data %>%
select(name,type, `Inventory Units`, `Asking Rent Per Unit`, county)
View(combined_data)
library(readxl)
library(dplyr)
library(purrr)
library(openxlsx)
rgc_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_rgc"
hct_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_hct"
reference_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/reference_table.xlsx"
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent"
source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/20/2024. Includes all data inside RGC/HCT (excludes Federal Way, Issaquah, Port Orchard Ferry Terminal, and Poulsbo due to missing data). Rent rounded to nearest 10")
# Create Functions ---------------------
# Function to read Excel file, extract column names and first row, and add filename as a column
read_excel_with_filename <- function(file_path) {
# Read Excel file
data <- read_excel(file_path)
# Extract column names and first row of data
col_names <- colnames(data)
first_row <- slice(data, 1)
# Add filename as a column without the .xlsx extension
filename <- gsub("\\.xlsx$", "", basename(file_path))
first_row$name <- filename
# Convert all columns to character type
first_row <- mutate_all(first_row, as.character)
# Return a list containing column names, first row of data, and filename
list(col_names = col_names, first_row = first_row)
}
# Function to combine data from each Excel file into one data frame
combine_data <- function(data_list) {
result <- combined_data
for (i in seq_along(data_list)) {
filename <- gsub("\\.xlsx$", "", basename(xlsx_files[i]))
data_list[[i]]$first_row$name <- filename
# Convert all columns to character type
data_list[[i]]$first_row <- mutate_all(data_list[[i]]$first_row, as.character)
result <- bind_rows(result, data_list[[i]]$first_row)
}
result
}
# Combine RGC files Together  ---------------------
xlsx_files <- list.files(rgc_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
rgc_data <- combined_data
# Combine HCT files Together  ---------------------
xlsx_files <- list.files(hct_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
hct_data <- combined_data
combined_data <- rbind(rgc_data, hct_data)
# Formatting & Calculating New Field ---------------------
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
View(combined_data)
# Summarize by Center (name)
by_center <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
View(by_center)
# Rounding estimates
by_center$`Asking Rent Per Unit` <- round(by_center$`Asking Rent Per Unit` / 10) * 10
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`) %>%
mutate(as.numeric(`Asking Rent Per Unit`))
View(combined_data)
combined_data <- rbind(rgc_data, hct_data)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`) %>%
as.numeric(`Asking Rent Per Unit`)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`) %>%
as.numeric(combined_data$`Asking Rent Per Unit`)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
as.numeric(combined_data$`Asking Rent Per Unit`)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
combined_data$`Asking Rent Per Unit` <- as.numeric(`Asking Rent Per Unit`)
View(combined_data)
combined_data$`Asking Rent Per Unit` <- as.numeric(combined_data$`Asking Rent Per Unit`)
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
# Summarize by Center (name)
by_center <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Rounding estimates
by_center$`Asking Rent Per Unit` <- round(by_center$`Asking Rent Per Unit` / 10) * 10
View(by_center)
combined_data$`Inventory Units` <- as.numeric((combined_data$`Inventory Units`))
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
# Summarize by Center (name)
by_center <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Rounding estimates
by_center$`Asking Rent Per Unit` <- round(by_center$`Asking Rent Per Unit` / 10) * 10
View(combined_data)
# Processing Raw CoStar Data for Housing Monitoring
# Geographies: RGCs, HCTs, Counties, Region
# Data Vintage: Q2 2024 QTD
# Created By: Eric Clute
# Assumptions ---------------------
library(readxl)
library(dplyr)
library(purrr)
library(openxlsx)
rgc_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_rgc"
hct_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_hct"
reference_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/reference_table.xlsx"
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent"
source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/20/2024. Includes all data inside RGC/HCT (excludes Federal Way, Issaquah, Port Orchard Ferry Terminal, and Poulsbo due to missing data). Rent rounded to nearest 10")
# Create Functions ---------------------
# Function to read Excel file, extract column names and first row, and add filename as a column
read_excel_with_filename <- function(file_path) {
# Read Excel file
data <- read_excel(file_path)
# Extract column names and first row of data
col_names <- colnames(data)
first_row <- slice(data, 1)
# Add filename as a column without the .xlsx extension
filename <- gsub("\\.xlsx$", "", basename(file_path))
first_row$name <- filename
# Convert all columns to character type
first_row <- mutate_all(first_row, as.character)
# Return a list containing column names, first row of data, and filename
list(col_names = col_names, first_row = first_row)
}
# Function to combine data from each Excel file into one data frame
combine_data <- function(data_list) {
result <- combined_data
for (i in seq_along(data_list)) {
filename <- gsub("\\.xlsx$", "", basename(xlsx_files[i]))
data_list[[i]]$first_row$name <- filename
# Convert all columns to character type
data_list[[i]]$first_row <- mutate_all(data_list[[i]]$first_row, as.character)
result <- bind_rows(result, data_list[[i]]$first_row)
}
result
}
# Combine RGC files Together  ---------------------
xlsx_files <- list.files(rgc_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
rgc_data <- combined_data
# Combine HCT files Together  ---------------------
xlsx_files <- list.files(hct_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
hct_data <- combined_data
combined_data <- rbind(rgc_data, hct_data)
# Formatting & Calculating New Fields ---------------------
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
combined_data$`Asking Rent Per Unit` <- as.numeric(combined_data$`Asking Rent Per Unit`)
combined_data$`Inventory Units` <- as.numeric((combined_data$`Inventory Units`))
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
# Summarize by Center (name)
by_center <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Cleanup and export ---------------------
# Rounding estimates
by_center$`Asking Rent Per Unit` <- round(by_center$`Asking Rent Per Unit` / 10) * 10
View(by_center)
county_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_county"
# Combine county files Together  ---------------------
xlsx_files <- list.files(county_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
county_data <- combined_data
View(county_data)
combined_data <- rbind(rgc_data, hct_data, county_data)
View(combined_data)
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
combined_data$`Asking Rent Per Unit` <- as.numeric(combined_data$`Asking Rent Per Unit`)
combined_data$`Inventory Units` <- as.numeric((combined_data$`Inventory Units`))
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
View(combined_data)
# Summarize by Center (name)
by_center <- combined_data %>%
filter(type == "rgc") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
View(by_center)
# Summarize by Center
by_center <- combined_data %>%
filter(type == "rgc") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Summarize by Center
by_rgc <- combined_data %>%
filter(type == "rgc") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Summarize by Center
by_hct <- combined_data %>%
filter(type == "hct") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Summarize by Center
by_county <- combined_data %>%
filter(type == "") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
View(by_county)
View(by_center)
View(by_hct)
View(by_county)
View(combined_data)
# Summarize by Center
by_county <- combined_data %>%
filter(is.na(type)) %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
View(by_county)
# Export Data
export_file <- paste0(export_path, "/metric18_raw.xlsx")
work_book <- createWorkbook()
# Export Data
export_file <- paste0(export_path, "/metric18_raw.xlsx")
work_book <- createWorkbook()
# Add the "by_rgc" sheet
addWorksheet(work_book, sheetName = "by_rgc")
writeData(work_book, sheet = "by_rgc", by_rgc)
writeData(work_book, sheet = "by_rgc", x = data.frame(source_info), startRow = nrow(by_rgc) + 3, startCol = 1)
# Add the "by_hct" sheet
addWorksheet(work_book, sheetName = "by_hct")
writeData(work_book, sheet = "by_hct", by_hct)
writeData(work_book, sheet = "by_hct", x = data.frame(source_info), startRow = nrow(by_hct) + 3, startCol = 1)
# Add the "by_county" sheet
addWorksheet(work_book, sheetName = "by_county")
writeData(work_book, sheet = "by_county", by_county)
writeData(work_book, sheet = "by_county", x = data.frame(source_info), startRow = nrow(by_county) + 3, startCol = 1)
saveWorkbook(work_book, file = export_file, overwrite = TRUE)
rgc_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside RGC (excludes Federal Way, Issaquah due to missing data). Rent rounded to nearest 10")
hct_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside HCT (excludes Port Orchard Ferry Terminal, and Poulsbo due to missing data). Rent rounded to nearest 10")
county_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside county. Rent rounded to nearest 10")
export_file <- paste0(export_path, "/metric18_raw.xlsx")
work_book <- createWorkbook()
# Add the "by_rgc" sheet
addWorksheet(work_book, sheetName = "by_rgc")
writeData(work_book, sheet = "by_rgc", by_rgc)
writeData(work_book, sheet = "by_rgc", x = data.frame(rgc_source_info), startRow = nrow(by_rgc) + 3, startCol = 1)
# Add the "by_hct" sheet
addWorksheet(work_book, sheetName = "by_hct")
writeData(work_book, sheet = "by_hct", by_hct)
writeData(work_book, sheet = "by_hct", x = data.frame(hct_source_info), startRow = nrow(by_hct) + 3, startCol = 1)
# Add the "by_county" sheet
addWorksheet(work_book, sheetName = "by_county")
writeData(work_book, sheet = "by_county", by_county)
writeData(work_book, sheet = "by_county", x = data.frame(county_source_info), startRow = nrow(by_county) + 3, startCol = 1)
saveWorkbook(work_book, file = export_file, overwrite = TRUE)
export_file <- paste0(export_path, "/metric18_raw.xlsx")
work_book <- createWorkbook()
# Add the "by_rgc" sheet
addWorksheet(work_book, sheetName = "by_rgc")
writeData(work_book, sheet = "by_rgc", by_rgc)
writeData(work_book, sheet = "by_rgc", x = data.frame(rgc_source_info), startRow = nrow(by_rgc) + 3, startCol = 1)
# Add the "by_hct" sheet
addWorksheet(work_book, sheetName = "by_hct")
writeData(work_book, sheet = "by_hct", by_hct)
writeData(work_book, sheet = "by_hct", x = data.frame(hct_source_info), startRow = nrow(by_hct) + 3, startCol = 1)
# Add the "by_county" sheet
addWorksheet(work_book, sheetName = "by_county")
writeData(work_book, sheet = "by_county", by_county)
writeData(work_book, sheet = "by_county", x = data.frame(county_source_info), startRow = nrow(by_county) + 3, startCol = 1)
saveWorkbook(work_book, file = export_file, overwrite = TRUE)
View(by_county)
# Summarize by Center
by_county <- combined_data %>%
filter(is.na(type)) %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
library(readxl)
library(dplyr)
library(purrr)
library(openxlsx)
rgc_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_rgc"
hct_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_hct"
county_data_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/raw_county"
reference_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent/reference_table.xlsx"
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric18_avg_asking_rent"
rgc_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside RGC (excludes Federal Way, Issaquah due to missing data). Rent rounded to nearest 10")
hct_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside HCT (excludes Port Orchard Ferry Terminal, and Poulsbo due to missing data). Rent rounded to nearest 10")
county_source_info <- c("CoStar, Q2 2024 QTD. Calculated by Eric Clute, 5/23/2024. Includes all data inside county. Rent rounded to nearest 10")
# Create Functions ---------------------
# Function to read Excel file, extract column names and first row, and add filename as a column
read_excel_with_filename <- function(file_path) {
# Read Excel file
data <- read_excel(file_path)
# Extract column names and first row of data
col_names <- colnames(data)
first_row <- slice(data, 1)
# Add filename as a column without the .xlsx extension
filename <- gsub("\\.xlsx$", "", basename(file_path))
first_row$name <- filename
# Convert all columns to character type
first_row <- mutate_all(first_row, as.character)
# Return a list containing column names, first row of data, and filename
list(col_names = col_names, first_row = first_row)
}
# Function to combine data from each Excel file into one data frame
combine_data <- function(data_list) {
result <- combined_data
for (i in seq_along(data_list)) {
filename <- gsub("\\.xlsx$", "", basename(xlsx_files[i]))
data_list[[i]]$first_row$name <- filename
# Convert all columns to character type
data_list[[i]]$first_row <- mutate_all(data_list[[i]]$first_row, as.character)
result <- bind_rows(result, data_list[[i]]$first_row)
}
result
}
# Combine RGC files Together  ---------------------
xlsx_files <- list.files(rgc_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
rgc_data <- combined_data
# Combine HCT files Together  ---------------------
xlsx_files <- list.files(hct_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
hct_data <- combined_data
# Combine county files Together  ---------------------
xlsx_files <- list.files(county_data_path, pattern = "\\.xlsx$", full.names = TRUE) # Get a list of all Excel files in the folder
excel_data <- map(xlsx_files, read_excel_with_filename) # Read all Excel files
all_col_names <- excel_data %>% map("col_names") %>% reduce(union) # Combine all column names into one vector
combined_data <- tibble::tibble(!!!set_names(rep(list(NULL), length(all_col_names)), all_col_names)) # Create an empty data frame with all column names
# Call the function to combine data from all Excel files
combined_data <- combine_data(excel_data)
county_data <- combined_data
combined_data <- rbind(rgc_data, hct_data, county_data)
# Formatting & Calculating New Fields ---------------------
# Remove unneeded fields
combined_data <- combined_data %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
# Cleanup
combined_data$`Asking Rent Per Unit` <- as.numeric(combined_data$`Asking Rent Per Unit`)
combined_data$`Inventory Units` <- as.numeric((combined_data$`Inventory Units`))
combined_data$`Asking Rent Per Unit` <- round(combined_data$`Asking Rent Per Unit` / 10) * 10
# Combine w/reference table
reference_table <- read_excel(reference_path)
combined_data <- left_join(combined_data, reference_table, by = "name")
# Summarize by various geos ---------------------
# Summarize by Center
by_rgc <- combined_data %>%
filter(type == "rgc") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Summarize by Center
by_hct <- combined_data %>%
filter(type == "hct") %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`, type, county)
# Summarize by Center
by_county <- combined_data %>%
filter(is.na(type)) %>%
select(name, `Inventory Units`, `Asking Rent Per Unit`)
# Cleanup and export ---------------------
# Export Data
export_file <- paste0(export_path, "/metric18_raw.xlsx")
work_book <- createWorkbook()
# Add the "by_rgc" sheet
addWorksheet(work_book, sheetName = "by_rgc")
writeData(work_book, sheet = "by_rgc", by_rgc)
writeData(work_book, sheet = "by_rgc", x = data.frame(rgc_source_info), startRow = nrow(by_rgc) + 3, startCol = 1)
# Add the "by_hct" sheet
addWorksheet(work_book, sheetName = "by_hct")
writeData(work_book, sheet = "by_hct", by_hct)
writeData(work_book, sheet = "by_hct", x = data.frame(hct_source_info), startRow = nrow(by_hct) + 3, startCol = 1)
# Add the "by_county" sheet
addWorksheet(work_book, sheetName = "by_county")
writeData(work_book, sheet = "by_county", by_county)
writeData(work_book, sheet = "by_county", x = data.frame(county_source_info), startRow = nrow(by_county) + 3, startCol = 1)
saveWorkbook(work_book, file = export_file, overwrite = TRUE)
library(openxlsx)
library(tidyr)
library(stringr)
library(dplyr)
library(magrittr)
# assumptions
#  ZHVI: Zillow Home Value Index - All Homes (SFR & Condo) Time series, Smoothed, Seasonally-Adjusted
#  ZORI: Zillow Observed Rent Index - All Homes + Multifamily, Smoothed, Seasonally-Adjusted
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric12_metro_area_rent"
ZHVI_url <- "https://files.zillowstatic.com/research/public_csvs/zhvi/Metro_zhvi_uc_sfrcondo_tier_0.33_0.67_sm_sa_month.csv"
ZORI_url <- "https://files.zillowstatic.com/research/public_csvs/zori/Metro_zori_uc_sfrcondomfr_sm_sa_month.csv?t=1711667054"
# ---------------- Pull in data ----------------
ZHVI_raw = read.csv(ZHVI_url)
ZORI_raw = read.csv(ZORI_url)
# ---------------- Clean data ----------------
ZHVI <- subset(ZHVI_raw, ZHVI_raw$RegionName == 'Seattle, WA')
ZORI <- subset(ZORI_raw, ZORI_raw$RegionName == 'Seattle, WA')
ZHVI$source <- "ZHVI"
ZORI$source <- "ZORI"
common <- intersect(colnames(ZHVI), colnames(ZORI))
all_data <- rbind(ZHVI[common], ZORI[common])
all_data %<>%
relocate(source, .before = RegionID)
colnames(all_data)<-gsub("X","",colnames(all_data))
View(all_data)
View(all_data)
export_path <- "J:/Projects/V2050/Housing/Monitoring/2024Update/Data/metric12-13_metro_area_rent_home_value"
# Export
write.csv(all_data, file = file.path(export_path, "metric12_13_raw.csv"), row.names = FALSE)
